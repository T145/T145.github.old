{"version":3,"sources":["constants/AppStyles.ts","components/ListItemLink.tsx","components/Copyright.tsx","utils/Routes.tsx","pages/HomePage.tsx","pages/ArchivePage.tsx","components/Navigator.tsx","serviceWorker.ts","index.tsx"],"names":["AppStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","ListItemLink","icon","primary","to","renderLink","React","useMemo","forwardRef","itemProps","ref","ListItem","button","component","ListItemIcon","ListItemText","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","Routes","key","path","name","classes","Grid","item","xs","Paper","className","gutterBottom","Navigator","useState","isMobileOnly","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","onClick","location","noWrap","pathname","Drawer","Divider","List","map","route","Container","maxWidth","from","Box","pt","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","querySelector","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","worker"],"mappings":"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","file":"static/js/main.17674800.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nconst DrawerWidth = 240;\n\nconst AppStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: DrawerWidth,\n    width: `calc(100% - ${DrawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: DrawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default AppStyles;\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport {\n  Link as RouterLink,\n  LinkProps as RouterLinkProps,\n} from 'react-router-dom';\n\ninterface ListItemLinkProps {\n  icon?: React.ReactNode;\n  primary: string;\n  to: string;\n}\n\nexport default function ListItemLink({ icon, primary, to }: ListItemLinkProps) {\n  const renderLink = React.useMemo(\n    () =>\n      React.forwardRef<never, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\n        <RouterLink to={to} ref={ref} {...itemProps} />\n      )),\n    [to]\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink}>\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n","import React from 'react';\nimport { Typography, Link } from '@material-ui/core';\n\nexport default function Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://github.com/T145\">\n        T145\n      </Link>{' '}\n      {new Date().getFullYear()}.\n    </Typography>\n  );\n}\n","import React from 'react';\n\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\nimport FolderSpecialRoundedIcon from '@material-ui/icons/FolderSpecialRounded';\n\nimport HomePage from '../pages/HomePage';\nimport ArchivePage from '../pages/ArchivePage';\n\nconst Routes = [\n  {\n    key: 100,\n    path: '/home',\n    name: 'Home',\n    icon: <HomeRoundedIcon />,\n    component: HomePage,\n  },\n  {\n    key: 101,\n    path: '/archive',\n    name: 'Archive',\n    icon: <FolderSpecialRoundedIcon />,\n    component: ArchivePage,\n  },\n];\n\nexport default Routes;\n","import React from 'react';\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport AppStyles from '../constants/AppStyles';\n\nexport default function HomePage() {\n  const classes = AppStyles();\n\n  return (\n    <Grid item xs={12}>\n      <Paper className={classes.paper}>\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n          Home Page\n        </Typography>\n        <p>\n          This is a website for all README information related to T145&rsquo;s\n          Github Repositories!\n        </p>\n      </Paper>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport AppStyles from '../constants/AppStyles';\n\nexport default function HomePage() {\n  const classes = AppStyles();\n\n  return (\n    <Grid item xs={12}>\n      <Paper className={classes.paper}>\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n          Archive Page\n        </Typography>\n        <p>\n          This is a website for all README information related to T145&rsquo;s\n          Github Repositories!\n        </p>\n      </Paper>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { isMobileOnly } from 'react-device-detect';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport {\n  CssBaseline,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Drawer,\n  Divider,\n  List,\n  Container,\n  Grid,\n  Box,\n} from '@material-ui/core';\n\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\nimport ChevronLeftRoundedIcon from '@material-ui/icons/ChevronLeftRounded';\n\nimport AppStyles from '../constants/AppStyles';\nimport ListItemLink from './ListItemLink';\nimport Copyright from './Copyright';\nimport Routes from '../utils/Routes';\n\nexport default function Navigator() {\n  const classes = AppStyles();\n  const [open, setOpen] = React.useState(!isMobileOnly);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuRoundedIcon />\n          </IconButton>\n\n          <Route>\n            {({ location }) => (\n              <Typography\n                component=\"h1\"\n                variant=\"h6\"\n                color=\"inherit\"\n                noWrap\n                className={classes.title}\n              >\n                {location.pathname}\n              </Typography>\n            )}\n          </Route>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftRoundedIcon />\n          </IconButton>\n        </div>\n\n        <Divider />\n        <List>\n          {Routes.map(route => {\n            return (\n              <ListItemLink\n                to={route.path}\n                primary={route.name}\n                icon={route.icon}\n                key={route.key}\n              />\n            );\n          })}\n        </List>\n      </Drawer>\n\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Switch>\n              {\n                // render page content on the corresponding route\n                Routes.map(route => {\n                  return (\n                    <Route\n                      path={route.path}\n                      key={route.key}\n                      component={route.component}\n                    />\n                  );\n                })\n              }\n              <Redirect from=\"/\" to=\"home\" />\n            </Switch>\n          </Grid>\n\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","/* eslint-disable no-console */\n/* eslint-disable no-param-reassign */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n\n        if (installingWorker == null) {\n          return;\n        }\n\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Navigator from './components/Navigator';\nimport * as worker from './serviceWorker';\nimport 'fontsource-roboto';\n\n/*\n * Useful documentation:\n * https://reactjs.org/docs/strict-mode.html\n * https://reactrouter.com/web/guides/quick-start\n */\n\nReactDOM.render(\n  <StrictMode>\n    <Router>\n      <Navigator />\n    </Router>\n  </StrictMode>,\n  document.querySelector('#root')\n);\n\nif (process.env.NODE_ENV === 'production') {\n  worker.register();\n} else {\n  worker.unregister();\n}\n"],"sourceRoot":""}