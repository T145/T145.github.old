{"version":3,"sources":["components/ListLink/ListLink.tsx","pages/SalesmanPage/SalesmanPage.tsx","pages/ChestsPage/ChestsPage.tsx","routes.tsx","pages/HomePage/HomePage.tsx","pages/ArchivePage/ArchivePage.tsx","pages/ContestsPage/ContestsPage.tsx","components/Copyright/Copyright.tsx","layouts/TabletLayout/TabletLayout.tsx","layouts/MobileLayout/MobileLayout.tsx","layouts/DesktopLayout/DesktopLayout.tsx","index.tsx","images/chests/logo.png","images/chests/showcase.png","images/chests/faq-shulkers.png"],"names":["defaultProps","icon","ListLink","primary","to","renderLink","useMemo","forwardRef","itemProps","ref","button","component","data-testid","useStyles","makeStyles","theme","createStyles","cardWrapper","paddingBottom","card","maxWidth","cardContent","backgroundColor","label","typography","root","flexGrow","paper","textAlign","color","palette","text","secondary","logo","maxHeight","objectFit","badge","padding","player","position","marginLeft","marginRight","Routes","key","path","name","container","spacing","item","variant","gutterBottom","paragraph","href","rel","classes","fontStyle","className","map","fontFamily","fontSize","m","React","useState","downloadsBadge","setDownloadsBadge","versionsBadge","setVersionsBadge","a","fetch","json","then","res","useEffect","fetchData","xs","src","alt","justify","dangerouslySetInnerHTML","__html","referrerPolicy","mcShowcase","url","config","youtube","playerVars","controls","align","faqShulkers","RouteList","links","route","List","RouteSwitch","routes","exact","Copyright","Date","getFullYear","display","grow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","contentShift","drawerBar","drawerBarShift","withRouter","useTheme","open","setOpen","clsx","aria-label","onClick","edge","direction","data-ga-event-category","data-ga-event-action","anchor","location","noWrap","pathname","subheader","background","top","bottom","handleDrawerOpen","handleDrawerClose","onOpen","onClose","disableBackdropTransition","isIOS","disableDiscovery","role","onKeyDown","margin","title","GlobalTheme","createMuiTheme","props","MuiToolbar","isMobile","MuiIconButton","MuiTooltip","enterDelay","main","error","red","A400","default","shadows","Array","fill","GlobalCss","withStyles","render","ThemeProvider","isTablet","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.abfa84b7.chunk.js","sourcesContent":["import React, { ReactNode, useMemo, forwardRef } from 'react';\nimport { Link, LinkProps } from 'react-router-dom';\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\n\ninterface OptionalProps {\n  icon?: ReactNode;\n}\n\ninterface Props extends LinkProps, OptionalProps {\n  primary: string;\n}\n\nconst defaultProps: OptionalProps = {\n  icon: <></>,\n};\n\nconst ListLink = ({ icon, primary, to }: Props) => {\n  const renderLink = useMemo(\n    () =>\n      forwardRef<never, Omit<LinkProps, 'to'>>((itemProps, ref) => (\n        <Link to={to} ref={ref} {...itemProps} />\n      )),\n    [to]\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink} data-testid=\"ListLink\">\n        <ListItemIcon>{icon}</ListItemIcon>\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n};\n\nListLink.defaultProps = defaultProps;\n\nexport default ListLink;\n","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport {\n  Typography,\n  Box,\n  Link,\n  List,\n  ListItemText,\n  Card,\n  CardContent,\n  CardActions,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    cardWrapper: {\n      paddingBottom: '5pt',\n    },\n    card: {\n      maxWidth: 845,\n    },\n    cardContent: {\n      backgroundColor: '#F6F6F6',\n    },\n    label: {\n      ...theme.typography.button,\n    },\n  })\n);\n\nexport default function SalesmanPage() {\n  const classes = useStyles();\n\n  return (\n    <div data-testid=\"SalesmanPage\">\n      <Typography paragraph>\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n          Traveling Salesman Estimater\n        </Typography>\n        After some research, my theory most closely resembles the &quot;Nearest\n        Neighbor Algorithm&quot; by Rosenkratz, Stearns, and Lewis, detailed on\n        page 242 of{' '}\n        <Link href=\"https://www.sciencedirect.com/science/article/pii/037722179290138Y\">\n          this paper\n        </Link>\n        . The concept used is entirely original, yet the worst-case performance\n        is very similar to their take. My first step was to think about the\n        problem differently. The classic TSP (Traveling Salesman Problem) is\n        stated along these lines:\n      </Typography>\n\n      <Typography paragraph component=\"div\">\n        <Box fontStyle=\"italic\">\n          Find the shortest possible route that visits every city exactly once\n          and returns to the starting point.\n        </Box>\n      </Typography>\n\n      <Typography paragraph>\n        The problem is defined as the shortest route that starts and ends at the\n        same point, which is essentially the shortest _circuit_ for the whole\n        graph, making the start aribtrary. In other words, no matter where you\n        start on the graph, there will only be one &quot;shortest path.&quot;\n        The question then becomes:\n      </Typography>\n\n      <Typography paragraph component=\"div\">\n        <Box fontStyle=\"italic\">\n          Find the shortest possible circuit that visits every city exactly\n          once.\n        </Box>\n      </Typography>\n\n      <Typography paragraph>\n        The easiest way to make this understandable for a computer is to make\n        the whole graph into one line. Thinking abstractly, we take all of the\n        points in the graph and arrange them into one straight line along the\n        y-axis, creating a path with the shortest distance between each point.\n      </Typography>\n\n      <Typography paragraph>\n        This would give us the shortest Hamiltonian, but we can&rsquo;t say that\n        it&rsquo;s always the shortest possible circuit. The length of the\n        overall path must be considered when choosing each subpath. This\n        consideration is done by sorting the graph. Intuitively, after sorting\n        the points by their `y` value, we&rsquo;ll end up with the shortest\n        path. The only time we run into problems while sorting is if any point\n        shares the same y-value with another point.\n      </Typography>\n\n      <Typography paragraph>\n        There are a few ways I&rsquo;ve come up with to handle such points,\n        which I call collisions.\n        <List>\n          <ListItemText primary=\"1. Find the best place to put them into the graph by testing the distance at each point and choosing which index gives us the shortest distance. This is brute-forcing the point, which has a performance of O(n&sup3;).\" />\n          <ListItemText primary=\"2. Build a binary tree that holds the graph, making any search operation O(nlgn).\" />\n          <ListItemText primary=\"3. Think about the graph 3-dimensionally, and tilt it to find the best distance. We tilt it up, and calculate the distance. Do the same downward. Each direction is sorted, so we plug it in at an index in a list by its y-value. Whichever is shorter is the spot we want to place it in. Now, in shifting the graph either direction there's a constant `offset` that's being added or subtracted. When normalizing the graph, we have to change back each point's values from this offset. The total performance of this calculation would be O(n).\" />\n        </List>\n      </Typography>\n\n      <Typography paragraph className={classes.cardWrapper}>\n        <Card variant=\"outlined\" className={classes.card}>\n          <CardContent className={classes.cardContent}>\n            {[\n              'init solution',\n              'sort solution',\n              'be sure we have the shortest path, and remove any collisions for future calculation',\n              'if we have collisions then find the best places to put them',\n            ].map(text => (\n              <Box fontFamily=\"Monospace\" fontSize=\"body1.fontSize\" m={1}>\n                {text}\n              </Box>\n            ))}\n          </CardContent>\n\n          <CardActions>\n            <div className={classes.label}>Algorithm Pseudocode</div>\n          </CardActions>\n        </Card>\n      </Typography>\n\n      <Typography paragraph>\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n          Results\n        </Typography>\n        Currently the implementation works for the following cases:\n        <List>\n          <ListItemText primary=\"&#8226; A single point (length 0)\" />\n          <ListItemText primary=\"&#8226; Simple to complex polygons\" />\n          <ListItemText primary=\"&#8226; Lines (simple to complex functions implied)\" />\n          <ListItemText primary=\"&#8226; Scatter plots (implied from polygons)\" />\n        </List>\n        Every possible path is a combination of these possibilities.\n      </Typography>\n\n      <Typography paragraph>\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n          Implementation Asymptotic Analysis\n        </Typography>\n        <ListItemText primary=\"Language: Java\" />\n        <ListItemText primary=\"Worst case: Graph with collisions; worst case time of O(n&sup3;)\" />\n        <ListItemText primary=\"Best case: Graph contains no collisions; worst case runtime is O(nlgn), due to the point sorting\" />\n      </Typography>\n    </div>\n  );\n}\n","/* eslint-disable react/no-danger */\n// If you are certain the content passed to dangerouslySetInnerHTML is sanitized HTML you can disable this rule.\nimport React from 'react';\nimport ReactPlayer from 'react-player/youtube';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Card,\n  CardContent,\n  CardActions,\n} from '@material-ui/core';\nimport logo from '../../images/chests/logo.png';\nimport mcShowcase from '../../images/chests/showcase.png';\nimport faqShulkers from '../../images/chests/faq-shulkers.png';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n    logo: {\n      maxWidth: '100%',\n      maxHeight: '100%',\n      objectFit: 'cover',\n    },\n    badge: {\n      padding: '1px',\n    },\n    player: {\n      maxWidth: '100%',\n      maxHeight: '100%',\n      position: 'relative',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n    card: {\n      backgroundColor: '#F6F6F6',\n    },\n    label: {\n      ...theme.typography.button,\n    },\n  })\n);\n\nexport default function ChestsPage() {\n  const [downloadsBadge, setDownloadsBadge] = React.useState('');\n  const [versionsBadge, setVersionsBadge] = React.useState('');\n  const classes = useStyles();\n\n  async function fetchData() {\n    // https://addons-ecs.forgesvc.net/api/v2/addon/290145\n    const resp = await fetch('https://t145-api.herokuapp.com/metalchests/');\n\n    resp.json().then(res => {\n      setDownloadsBadge(res.downloadsBadge);\n      setVersionsBadge(res.versionsBadge);\n    });\n    // .catch(err => console.error(err));\n  }\n\n  React.useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <Grid\n      container\n      className={classes.root}\n      spacing={4}\n      data-testid=\"ChestsPage\"\n    >\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <img className={classes.logo} src={logo} alt=\"Metal Chests Logo\" />\n        </Paper>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Grid container justify=\"center\">\n          <Grid item>\n            <Paper className={classes.paper}>\n              <div\n                className={classes.badge}\n                dangerouslySetInnerHTML={{ __html: downloadsBadge }}\n              />\n            </Paper>\n          </Grid>\n\n          <Grid item>\n            <Paper className={classes.paper}>\n              <div\n                className={classes.badge}\n                dangerouslySetInnerHTML={{ __html: versionsBadge }}\n              />\n            </Paper>\n          </Grid>\n\n          <Grid item>\n            <Paper className={classes.paper}>\n              <a\n                href=\"https://www.codacy.com/manual/T145/metal-chests\"\n                rel=\"noopener noreferrer\"\n              >\n                <img\n                  className={classes.badge}\n                  src=\"https://img.shields.io/codacy/grade/04f5020887174b9aadcaa976556f0f74?style=for-the-badge&logo=codacy&labelColor=2D2D2D\"\n                  alt=\"Code Grade Badge\"\n                  referrerPolicy=\"no-referrer\"\n                />\n              </a>\n            </Paper>\n          </Grid>\n\n          <Grid item>\n            <Paper className={classes.paper}>\n              <a href=\"https://discord.gg/EFMcwpC\" rel=\"noopener noreferrer\">\n                <img\n                  className={classes.badge}\n                  src=\"https://img.shields.io/discord/265632935456014336?style=for-the-badge&logo=discord&label=Discord&logoColor=white&color=%237289da&labelColor=2D2D2D\"\n                  alt=\"Discord Badge\"\n                  referrerPolicy=\"no-referrer\"\n                />\n              </a>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <img\n            className={classes.logo}\n            src={mcShowcase}\n            alt=\"Metal Chests Showcase\"\n          />\n        </Paper>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <ReactPlayer\n            className={classes.player}\n            url={[\n              'https://www.youtube.com/watch?v=6BdMIWLw9XA',\n              'https://www.youtube.com/watch?v=rPA5AcmJccY',\n              'https://www.youtube.com/watch?v=Tg3Opl-4n3Y',\n              'https://www.youtube.com/watch?v=dQw4w9WgXcQ',\n            ]}\n            config={{\n              youtube: {\n                playerVars: {\n                  controls: 1,\n                  rel: 0,\n                },\n              },\n            }}\n          />\n        </Paper>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Typography variant=\"h4\" align=\"left\">\n          <Box fontStyle=\"oblique\">I. Extra Information</Box>\n          <List>\n            <ListItemText primary=\"&#8226; In the Bit-by-Bit spotlight, placing chests in minecarts is a feature added by Quark. The more recent 'Metal Chests' releases support this feature.\" />\n            <ListItemText primary=\"&#8226; Any minecart features have been moved into 'Metal Transport,' which is now 'Cart Complete.'\" />\n            <ListItemText primary=\"&#8226; Inventory sizes can be configured in a generated JSON config.\" />\n            <ListItemText primary=\"&#8226; Regular chest upgrades can be applied to any oredicted 'chestWood' or 'trappedChest.'\" />\n            <ListItemText primary=\"&#8226; If Thaumcraft is installed, craft the hungry chests & their upgrades in the Arcane Workbench.\" />\n          </List>\n        </Typography>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Typography variant=\"h4\" align=\"left\">\n          <Box fontStyle=\"oblique\">II. Workspace Dependencies</Box>\n        </Typography>\n\n        <br />\n\n        <Grid container spacing={3}>\n          <Grid item>\n            <Card variant=\"outlined\">\n              <CardContent className={classes.card}>\n                {[\n                  '* install scoop',\n                  'scoop install git',\n                  'scoop bucket add java',\n                  'scoop bucket add versions',\n                  'scoop install ojdkbuild8 gradle4',\n                ].map(text => (\n                  <Box fontFamily=\"Monospace\" fontSize=\"body1.fontSize\" m={1}>\n                    {text}\n                  </Box>\n                ))}\n              </CardContent>\n\n              <CardActions>\n                <div className={classes.label}>Windows</div>\n              </CardActions>\n            </Card>\n          </Grid>\n\n          <Grid item>\n            <Card variant=\"outlined\">\n              <CardContent className={classes.card}>\n                {[\n                  '* install homebrew',\n                  'brew cask install java',\n                  'brew install gradle',\n                ].map(text => (\n                  <Box fontFamily=\"Monospace\" fontSize=\"body1.fontSize\" m={1}>\n                    {text}\n                  </Box>\n                ))}\n              </CardContent>\n\n              <CardActions>\n                <div className={classes.label}>Mac OS</div>\n              </CardActions>\n            </Card>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Typography variant=\"h4\" align=\"left\">\n          <Box fontStyle=\"oblique\">III. Workspace Setup</Box>\n        </Typography>\n\n        <br />\n\n        <Grid container spacing={3}>\n          <Grid item>\n            <Card variant=\"outlined\">\n              <CardContent className={classes.card}>\n                {['gradle setupEclipseWorkspace', 'gradle eclipse'].map(\n                  text => (\n                    <Box fontFamily=\"Monospace\" fontSize=\"body1.fontSize\" m={1}>\n                      {text}\n                    </Box>\n                  )\n                )}\n              </CardContent>\n\n              <CardActions>\n                <div className={classes.label}>Eclipse</div>\n              </CardActions>\n            </Card>\n          </Grid>\n\n          <Grid item>\n            <Card variant=\"outlined\">\n              <CardContent className={classes.card}>\n                {['gradle setupDecompWorkspace', 'gradle idea'].map(text => (\n                  <Box fontFamily=\"Monospace\" fontSize=\"body1.fontSize\" m={1}>\n                    {text}\n                  </Box>\n                ))}\n              </CardContent>\n\n              <CardActions>\n                <div className={classes.label}>IntelliJ IDEA</div>\n              </CardActions>\n            </Card>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Typography variant=\"h4\" align=\"left\">\n          <Box fontStyle=\"oblique\">IV. F.A.Q.</Box>\n          <List>\n            <ListItem>\n              <img\n                className={classes.logo}\n                src={faqShulkers}\n                alt=\"FAQ Shulkers (keep crying)\"\n              />\n            </ListItem>\n          </List>\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  GiFamilyHouse as HouseIcon,\n  GiTreasureMap as MapIcon,\n  GiTrophy as TrophyIcon,\n  GiMetalBar as MetalBarIcon,\n} from 'react-icons/gi';\nimport { SiInternetarchive as ArchiveIcon } from 'react-icons/si';\nimport List from '@material-ui/core/List';\nimport ListLink from './components/ListLink/ListLink';\nimport HomePage from './pages/HomePage/HomePage';\nimport ArchivePage from './pages/ArchivePage/ArchivePage';\nimport SalesmanPage from './pages/SalesmanPage/SalesmanPage';\nimport ContestsPage from './pages/ContestsPage/ContestsPage';\nimport ChestsPage from './pages/ChestsPage/ChestsPage';\n\n/*\n Route keys are hardcoded as opposed to using\n the \"mapped\" keys to prevent variance.\n */\n\nconst Routes = [\n  {\n    key: 100,\n    path: '/',\n    name: 'Home',\n    icon: <HouseIcon />,\n    component: HomePage,\n  },\n  {\n    key: 101,\n    path: '/archive',\n    name: 'Archive',\n    icon: <ArchiveIcon />,\n    component: ArchivePage,\n  },\n  {\n    key: 102,\n    path: '/salesman',\n    name: 'Traveling Salesman',\n    icon: <MapIcon />,\n    component: SalesmanPage,\n  },\n  {\n    key: 103,\n    path: '/contests',\n    name: 'Programming Contests',\n    icon: <TrophyIcon />,\n    component: ContestsPage,\n  },\n  {\n    key: 104,\n    path: '/chests',\n    name: 'Metal Chests',\n    icon: <MetalBarIcon />,\n    component: ChestsPage,\n  },\n];\n\nexport function RouteList() {\n  const links = Routes.map(route => (\n    <ListLink\n      icon={route.icon}\n      primary={route.name}\n      to={route.path}\n      key={route.key}\n    />\n  ));\n\n  return <List>{links}</List>;\n}\n\nexport function RouteSwitch() {\n  const routes = Routes.map(route => (\n    <Route\n      exact\n      path={route.path}\n      component={route.component}\n      key={route.key}\n    />\n  ));\n\n  return <Switch>{routes}</Switch>;\n}\n","import React from 'react';\nimport { Grid, Typography, List, ListItemText, Link } from '@material-ui/core';\nimport { FaRegSmileWink as SmileIcon } from 'react-icons/fa';\n\nexport default function HomePage() {\n  return (\n    <div data-testid=\"HomePage\">\n      <Grid container spacing={2}>\n        <Grid item>\n          <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n            Welcome to T145&rsquo;s Github documentation website!\n          </Typography>\n\n          <Typography paragraph>\n            This project was made to:\n            <List>\n              <ListItemText\n                primary=\"&#8226; Render views in HTML5, allowing maximum customization\"\n                secondary=\"Because Github's Markdown rendering generates archaic HTML\"\n              />\n              <ListItemText\n                primary=\"&#8226; Render copy-pasting similar READMEs across multiple projects unnecessary\"\n                secondary=\"Including information like setup instructions & donation options\"\n              />\n              <ListItemText\n                primary=\"&#8226; Be a clean documentation interface that supports multiple platforms\"\n                secondary=\"Because Github's mobile view is clunky, and third-party apps are sketchy\"\n              />\n              <ListItemText\n                primary=\"&#8226; Be a popular project showcase\"\n                secondary={[\n                  'Feel free to star some repositories! ',\n                  <SmileIcon />,\n                ]}\n              />\n            </List>\n          </Typography>\n\n          <Typography paragraph>\n            If there are any problems with this site on any platform, please\n            give a detailed report over at{' '}\n            <Link\n              href=\"https://github.com/T145/T145.github.io/issues\"\n              rel=\"noreferrer\"\n            >\n              https://github.com/T145/T145.github.io/issues\n            </Link>\n            .\n          </Typography>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport default function ArchivePage() {\n  return (\n    <div data-testid=\"ArchivePage\">\n      <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n        Archive Page\n      </Typography>\n\n      <Typography paragraph>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n        tempor incididunt ut labore et dolore magna aliqua. Rhoncus dolor purus\n        non enim praesent elementum facilisis leo vel. Risus at ultrices mi\n        tempus imperdiet. Semper risus in hendrerit gravida rutrum quisque non\n        tellus. Convallis convallis tellus id interdum velit laoreet id donec\n        ultrices. Odio morbi quis commodo odio aenean sed adipiscing. Amet nisl\n        suscipit adipiscing bibendum est ultricies integer quis. Cursus euismod\n        quis viverra nibh cras. Metus vulputate eu scelerisque felis imperdiet\n        proin fermentum leo. Mauris commodo quis imperdiet massa tincidunt. Cras\n        tincidunt lobortis feugiat vivamus at augue. At augue eget arcu dictum\n        varius duis at consectetur lorem. Velit sed ullamcorper morbi tincidunt.\n        Lorem donec massa sapien faucibus et molestie ac.\n      </Typography>\n\n      <Typography paragraph>\n        Consequat mauris nunc congue nisi vitae suscipit. Fringilla est\n        ullamcorper eget nulla facilisi etiam dignissim diam. Pulvinar elementum\n        integer enim neque volutpat ac tincidunt. Ornare suspendisse sed nisi\n        lacus sed viverra tellus. Purus sit amet volutpat consequat mauris.\n        Elementum eu facilisis sed odio morbi. Euismod lacinia at quis risus sed\n        vulputate odio. Morbi tincidunt ornare massa eget egestas purus viverra\n        accumsan in. In hendrerit gravida rutrum quisque non tellus orci ac.\n        Pellentesque nec nam aliquam sem et tortor. Habitant morbi tristique\n        senectus et. Adipiscing elit duis tristique sollicitudin nibh sit.\n        Ornare aenean euismod elementum nisi quis eleifend. Commodo viverra\n        maecenas accumsan lacus vel facilisis. Nulla posuere sollicitudin\n        aliquam ultrices sagittis orci a.\n      </Typography>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport default function ContestsPage() {\n  return (\n    <div data-testid=\"ContestsPage\">\n      <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n        ContestsPage\n      </Typography>\n\n      <Typography paragraph>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n        tempor incididunt ut labore et dolore magna aliqua. Rhoncus dolor purus\n        non enim praesent elementum facilisis leo vel. Risus at ultrices mi\n        tempus imperdiet. Semper risus in hendrerit gravida rutrum quisque non\n        tellus. Convallis convallis tellus id interdum velit laoreet id donec\n        ultrices. Odio morbi quis commodo odio aenean sed adipiscing. Amet nisl\n        suscipit adipiscing bibendum est ultricies integer quis. Cursus euismod\n        quis viverra nibh cras. Metus vulputate eu scelerisque felis imperdiet\n        proin fermentum leo. Mauris commodo quis imperdiet massa tincidunt. Cras\n        tincidunt lobortis feugiat vivamus at augue. At augue eget arcu dictum\n        varius duis at consectetur lorem. Velit sed ullamcorper morbi tincidunt.\n        Lorem donec massa sapien faucibus et molestie ac.\n      </Typography>\n\n      <Typography paragraph>\n        Consequat mauris nunc congue nisi vitae suscipit. Fringilla est\n        ullamcorper eget nulla facilisi etiam dignissim diam. Pulvinar elementum\n        integer enim neque volutpat ac tincidunt. Ornare suspendisse sed nisi\n        lacus sed viverra tellus. Purus sit amet volutpat consequat mauris.\n        Elementum eu facilisis sed odio morbi. Euismod lacinia at quis risus sed\n        vulputate odio. Morbi tincidunt ornare massa eget egestas purus viverra\n        accumsan in. In hendrerit gravida rutrum quisque non tellus orci ac.\n        Pellentesque nec nam aliquam sem et tortor. Habitant morbi tristique\n        senectus et. Adipiscing elit duis tristique sollicitudin nibh sit.\n        Ornare aenean euismod elementum nisi quis eleifend. Commodo viverra\n        maecenas accumsan lacus vel facilisis. Nulla posuere sollicitudin\n        aliquam ultrices sagittis orci a.\n      </Typography>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Typography, Link } from '@material-ui/core';\n\nexport default function Copyright() {\n  return (\n    <Typography data-testid=\"Copyright\" color=\"inherit\" variant=\"subtitle2\">\n      <Link color=\"inherit\" href=\"https://github.com/T145\">\n        T145\n      </Link>\n      {' © '}\n      {new Date().getFullYear()}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Route, withRouter } from 'react-router-dom';\nimport {\n  makeStyles,\n  useTheme,\n  Theme,\n  createStyles,\n} from '@material-ui/core/styles';\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Drawer,\n  Divider,\n  Icon,\n} from '@material-ui/core';\nimport { FaMapSigns as SignIcon } from 'react-icons/fa';\nimport { VscGithub as GithubIcon } from 'react-icons/vsc';\nimport { AiOutlineBars as BarsIcon } from 'react-icons/ai';\nimport {\n  FiChevronsLeft as ChevronLeftIcon,\n  FiChevronsRight as ChevronRightIcon,\n} from 'react-icons/fi';\nimport { RouteList, RouteSwitch } from '../../routes';\nimport Copyright from '../../components/Copyright/Copyright';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n    drawerBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    drawerBarShift: {\n      width: drawerWidth,\n      marginRight: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n  })\n);\n\nfunction TabletLayout() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  const getDrawerToggleIcon = () => {\n    if (open) {\n      return theme.direction === 'ltr' ? (\n        <ChevronLeftIcon />\n      ) : (\n        <ChevronRightIcon />\n      );\n    }\n    return <BarsIcon />;\n  };\n\n  return (\n    <div className={classes.root} data-testid=\"TabletLayout\">\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"toggle drawer\"\n            onClick={toggleDrawer}\n            edge=\"start\"\n            className={clsx(classes.menuButton)}\n          >\n            {getDrawerToggleIcon()}\n          </IconButton>\n\n          <div className={classes.grow} />\n          <Copyright />\n          <div className={classes.grow} />\n\n          <IconButton\n            color=\"inherit\"\n            component=\"a\"\n            href=\"https://github.com/T145/T145.github.io\"\n            aria-label=\"GitHub\"\n            edge=\"start\"\n            data-ga-event-category=\"header\"\n            data-ga-event-action=\"github\"\n            rel=\"noreferrer\"\n          >\n            <GithubIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <AppBar\n          color=\"secondary\"\n          position=\"fixed\"\n          className={clsx(classes.drawerBar, {\n            [classes.drawerBarShift]: open,\n          })}\n        >\n          <Toolbar>\n            <Icon color=\"inherit\" fontSize=\"small\">\n              <SignIcon />\n            </Icon>\n\n            <div className={classes.content} />\n\n            <Route>\n              {({ location }) => (\n                <Typography color=\"inherit\" variant=\"overline\" noWrap>\n                  {location.pathname}\n                </Typography>\n              )}\n            </Route>\n          </Toolbar>\n        </AppBar>\n\n        <div className={classes.drawerHeader} />\n        <Divider />\n        <RouteList />\n      </Drawer>\n\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <RouteSwitch />\n      </main>\n    </div>\n  );\n}\n\nexport default withRouter(TabletLayout);\n","import React from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport { isIOS } from 'react-device-detect';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport {\n  AppBar,\n  Toolbar,\n  SwipeableDrawer,\n  Typography,\n  IconButton,\n  Icon,\n} from '@material-ui/core';\nimport { FaMapSigns as SignIcon } from 'react-icons/fa';\nimport { VscGithub as GitHubIcon } from 'react-icons/vsc';\nimport { AiOutlineBars as BarsIcon } from 'react-icons/ai';\nimport { RouteList, RouteSwitch } from '../../routes';\nimport Copyright from '../../components/Copyright/Copyright';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n    toolbar: theme.mixins.toolbar, // necessary for content to not clip the app bar\n    content: {\n      padding: theme.spacing(2, 2, 0),\n    },\n    subheader: {\n      backgroundColor: theme.palette.background.paper,\n    },\n    appBar: {\n      top: 'auto',\n      bottom: 0,\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    drawer: {\n      width: 'auto',\n    },\n  })\n);\n\nfunction MobileLayout() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root} data-testid=\"MobileLayout\">\n      <AppBar color=\"secondary\">\n        <Toolbar>\n          <Icon color=\"inherit\" fontSize=\"small\">\n            <SignIcon />\n          </Icon>\n\n          <div className={classes.grow} />\n\n          <Route>\n            {({ location }) => (\n              <Typography color=\"inherit\" variant=\"overline\" noWrap>\n                {location.pathname}\n              </Typography>\n            )}\n          </Route>\n        </Toolbar>\n      </AppBar>\n\n      <div className={classes.toolbar} />\n\n      <div className={classes.content}>\n        <RouteSwitch />\n      </div>\n\n      <div className={classes.toolbar} />\n\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            component=\"a\"\n            href=\"https://github.com/T145/T145.github.io\"\n            aria-label=\"GitHub\"\n            edge=\"start\"\n            data-ga-event-category=\"header\"\n            data-ga-event-action=\"github\"\n            rel=\"noreferrer\"\n          >\n            <GitHubIcon />\n          </IconButton>\n\n          <div className={classes.grow} />\n          <Copyright />\n          <div className={classes.grow} />\n\n          <IconButton\n            edge=\"end\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n          >\n            <BarsIcon />\n          </IconButton>\n\n          <SwipeableDrawer\n            anchor=\"bottom\"\n            open={open}\n            onOpen={handleDrawerOpen}\n            onClose={handleDrawerClose}\n            disableBackdropTransition={!isIOS}\n            disableDiscovery={isIOS}\n          >\n            <div\n              className={classes.drawer}\n              role=\"presentation\"\n              onClick={handleDrawerClose}\n              onKeyDown={handleDrawerClose}\n            >\n              <RouteList />\n            </div>\n          </SwipeableDrawer>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default withRouter(MobileLayout);\n","import React from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport {\n  Drawer,\n  AppBar,\n  Toolbar,\n  Typography,\n  Tooltip,\n  IconButton,\n  Icon,\n} from '@material-ui/core';\nimport { VscGithub as GithubIcon } from 'react-icons/vsc';\nimport { FaMapSigns as SignIcon } from 'react-icons/fa';\nimport { RouteList, RouteSwitch } from '../../routes';\nimport Copyright from '../../components/Copyright/Copyright';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      margin: theme.spacing(0, 3, 0),\n    },\n    appBar: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerBar: {\n      width: drawerWidth,\n      marginRight: `calc(100% - ${drawerWidth}px)`,\n    },\n    toolbar: theme.mixins.toolbar, // necessary for content to be below app bar\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    grow: {\n      flexGrow: 1,\n    },\n  })\n);\n\nfunction DesktopLayout() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root} data-testid=\"DesktopLayout\">\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <Tooltip title=\"Github\">\n            <IconButton\n              color=\"inherit\"\n              component=\"a\"\n              href=\"https://github.com/T145/T145.github.io\"\n              aria-label=\"GitHub\"\n              edge=\"start\"\n              data-ga-event-category=\"header\"\n              data-ga-event-action=\"github\"\n              rel=\"noreferrer\"\n            >\n              <GithubIcon />\n            </IconButton>\n          </Tooltip>\n\n          <div className={classes.grow} />\n          <Copyright />\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <AppBar color=\"secondary\" className={classes.drawerBar}>\n          <Toolbar>\n            <Icon color=\"inherit\" fontSize=\"small\">\n              <SignIcon />\n            </Icon>\n\n            <div className={classes.grow} />\n\n            <Route>\n              {({ location }) => (\n                <Typography color=\"inherit\" variant=\"overline\" noWrap>\n                  {location.pathname}\n                </Typography>\n              )}\n            </Route>\n          </Toolbar>\n        </AppBar>\n\n        <div className={classes.toolbar} />\n        <RouteList />\n      </Drawer>\n\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <RouteSwitch />\n      </main>\n    </div>\n  );\n}\n\nexport default withRouter(DesktopLayout);\n","/* eslint-disable no-restricted-imports */\nimport React, { StrictMode } from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { isMobile, isTablet } from 'react-device-detect';\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  withStyles,\n} from '@material-ui/core/styles';\nimport { Shadows } from '@material-ui/core/styles/shadows';\nimport { red } from '@material-ui/core/colors';\nimport 'fontsource-roboto'; // required for Material UI\nimport TabletLayout from './layouts/TabletLayout/TabletLayout';\nimport MobileLayout from './layouts/MobileLayout/MobileLayout';\nimport DesktopLayout from './layouts/DesktopLayout/DesktopLayout';\n\nconst GlobalTheme = createMuiTheme({\n  props: {\n    MuiToolbar: {\n      variant: isMobile ? 'regular' : 'dense', // dense is desktop only\n    },\n    MuiIconButton: {\n      color: 'inherit', // 'default' by default\n    },\n    MuiTooltip: {\n      enterDelay: 300,\n    },\n  },\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n  shadows: Array(25).fill('none') as Shadows,\n});\n\nconst GlobalCss = withStyles({\n  // @global is handled by jss-plugin-global\n  '@global': {},\n})(() => null);\n\nfunction getLayout() {\n  if (isMobile) {\n    return isTablet ? <TabletLayout /> : <MobileLayout />;\n  }\n  return <DesktopLayout />;\n}\n\nrender(\n  <StrictMode>\n    <ThemeProvider theme={GlobalTheme}>\n      <GlobalCss />\n      <Router>{getLayout()}</Router>\n    </ThemeProvider>\n  </StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.d067153e.png\";","module.exports = __webpack_public_path__ + \"static/media/showcase.c054ec80.png\";","module.exports = __webpack_public_path__ + \"static/media/faq-shulkers.7482b73d.png\";"],"sourceRoot":""}