{"version":3,"sources":["constants/AppStyles.ts","utils/Routes.tsx","pages/HomePage.tsx","pages/ArchivePage.tsx","components/ListItemLink.tsx","components/PokemonSprite.tsx","components/Footer.tsx","components/Website.tsx","index.tsx"],"names":["AppStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Routes","key","path","name","icon","component","classes","Grid","item","xs","Paper","className","Typography","variant","color","gutterBottom","ListItemLink","primary","to","renderLink","React","useMemo","forwardRef","itemProps","ref","ListItem","button","ListItemIcon","ListItemText","randomInt","min","max","Math","floor","random","PokemonSprite","useState","sprite","setSprite","setName","a","pokeId","url","fetch","json","then","result","sprites","front_default","useEffect","fetchData","src","alt","Footer","align","Link","href","Date","getFullYear","direction","justify","Navigator","isMobileOnly","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","onClick","location","noWrap","pathname","Drawer","Divider","List","map","route","Container","maxWidth","from","Box","pt","ReactDOM","render","document","querySelector"],"mappings":"yYAmFeA,EA/EGC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,QAAS,QAEXC,QAAS,CACPC,aAAc,IAEhBC,YAAY,aACVH,QAAS,OACTI,WAAY,SACZC,eAAgB,WAChBC,QAAS,SACNR,EAAMS,OAAON,SAElBO,OAAQ,CACNC,OAAQX,EAAMW,OAAOC,OAAS,EAC9BC,WAAYb,EAAMc,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQhB,EAAMc,YAAYE,OAAOC,MACjCC,SAAUlB,EAAMc,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,WAxBgB,IAyBhBC,MAAM,eAAD,OAzBW,IAyBX,OACLT,WAAYb,EAAMc,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQhB,EAAMc,YAAYE,OAAOC,MACjCC,SAAUlB,EAAMc,YAAYI,SAASK,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,iBAAkB,CAChBxB,QAAS,QAEXyB,MAAO,CACLC,SAAU,GAEZC,YAAa,CACXC,SAAU,WACVC,WAAY,SACZT,MA3CgB,IA4ChBT,WAAYb,EAAMc,YAAYC,OAAO,QAAS,CAC5CC,OAAQhB,EAAMc,YAAYE,OAAOC,MACjCC,SAAUlB,EAAMc,YAAYI,SAASK,kBAGzCS,iBAAiB,aACfC,UAAW,SACXpB,WAAYb,EAAMc,YAAYC,OAAO,QAAS,CAC5CC,OAAQhB,EAAMc,YAAYE,OAAOC,MACjCC,SAAUlB,EAAMc,YAAYI,SAASC,gBAEvCG,MAAOtB,EAAMkC,QAAQ,IACpBlC,EAAMmC,YAAYC,GAAG,MAAQ,CAC5Bd,MAAOtB,EAAMkC,QAAQ,KAGzBG,aAAcrC,EAAMS,OAAON,QAC3BmC,QAAS,CACPV,SAAU,EACVW,OAAQ,QACRC,SAAU,QAEZC,UAAW,CACTC,WAAY1C,EAAMkC,QAAQ,GAC1BS,cAAe3C,EAAMkC,QAAQ,IAE/BU,MAAO,CACLpC,QAASR,EAAMkC,QAAQ,GACvBhC,QAAS,OACTsC,SAAU,OACVK,cAAe,UAEjBC,YAAa,CACXP,OAAQ,S,0CCvEZ,IAiBeQ,EAjBA,CACb,CACEC,IAAK,IACLC,KAAM,QACNC,KAAM,OACNC,KAAM,kBAAC,IAAD,MACNC,UCVW,WACb,IAAMC,EAAUvD,IAEhB,OACE,kBAACwD,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CAAOC,UAAWL,EAAQT,OACxB,kBAACe,EAAA,EAAD,CAAYP,UAAU,KAAKQ,QAAQ,KAAKC,MAAM,UAAUC,cAAY,GAApE,aAGA,2HDGN,CACEd,IAAK,IACLC,KAAM,WACNC,KAAM,UACNC,KAAM,kBAAC,IAAD,MACNC,UEjBW,WACb,IAAMC,EAAUvD,IAEhB,OACE,kBAACwD,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CAAOC,UAAWL,EAAQT,OACxB,kBAACe,EAAA,EAAD,CAAYP,UAAU,KAAKQ,QAAQ,KAAKC,MAAM,UAAUC,cAAY,GAApE,gBAGA,4H,2BCEO,SAASC,EAAT,GAAiE,IAAzCZ,EAAwC,EAAxCA,KAAMa,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,GAC9CC,EAAaC,IAAMC,SACvB,kBACED,IAAME,YAA+C,SAACC,EAAWC,GAAZ,OACnD,kBAAC,IAAD,eAAYN,GAAIA,EAAIM,IAAKA,GAASD,SAEtC,CAACL,IAGH,OACE,4BACE,kBAACO,EAAA,EAAD,CAAUC,QAAM,EAACrB,UAAWc,GACzBf,EAAO,kBAACuB,EAAA,EAAD,KAAevB,GAAuB,KAC9C,kBAACwB,EAAA,EAAD,CAAcX,QAASA,M,sCCpB/B,SAASY,EAAUC,EAAaC,GAC9B,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGvC,SAASK,IAAgB,MAEVf,IAAMgB,SAAS,IAFL,mBAE/BC,EAF+B,KAEvBC,EAFuB,OAGdlB,IAAMgB,SAAS,IAHD,mBAG/BjC,EAH+B,KAGzBoC,EAHyB,iDAKtC,8BAAAC,EAAA,6DACQC,EAASZ,EAAU,EAAG,KACtBa,EAFR,4CAEmDD,GAFnD,SAGyBE,MAAMD,GAH/B,cAKWE,OAAOC,MAAK,SAAAC,GACnBR,EAAUQ,EAAOC,QAAQC,eACzBT,EAAQO,EAAO3C,SAPnB,4CALsC,sBAqBtC,OAJAiB,IAAM6B,WAAU,YAjBsB,mCAkBpCC,KACC,IAECb,EAEA,6BACE,yBAAKc,IAAKd,EAAQe,IAAKjD,KAKtB,qCCrCM,SAASkD,IACtB,OACE,kBAACzC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBwC,MAAM,UACrD,kBACD,kBAACC,EAAA,EAAD,CAAMzC,MAAM,UAAU0C,KAAK,2BAA3B,QAEQ,KACP,IAAIC,MAAOC,cALd,IAME,kBAACnD,EAAA,EAAD,CAAMb,WAAS,EAACiE,UAAU,MAAMC,QAAQ,SAASrG,WAAW,YAC1D,kBAAC4E,EAAD,MADF,IACoB,kBAACA,EAAD,MADpB,IACsC,kBAACA,EAAD,QCkB7B,SAAS0B,IACtB,IAAMvD,EAAUvD,IADkB,EAEVqE,IAAMgB,UAAU0B,gBAFN,mBAE3BC,EAF2B,KAErBC,EAFqB,KAUlC,OACE,kBAAC,IAAD,KACE,yBAAKrD,UAAWL,EAAQpD,MACtB,kBAAC+G,EAAA,EAAD,MAEA,kBAACC,EAAA,EAAD,CACEnF,SAAS,WACT4B,UAAWwD,YAAK7D,EAAQ3C,OAAQoG,GAAQzD,EAAQjC,cAEhD,kBAAC+F,EAAA,EAAD,CAASzD,UAAWL,EAAQlD,SAC1B,kBAACiH,EAAA,EAAD,CACEC,KAAK,QACLxD,MAAM,UACNyD,aAAW,cACXC,QArBa,WACvBR,GAAQ,IAqBErD,UAAWwD,YACT7D,EAAQ7B,WACRsF,GAAQzD,EAAQ3B,mBAGlB,kBAAC,IAAD,OAGF,kBAAC,IAAD,MACG,gBAAG8F,EAAH,EAAGA,SAAH,OACC,kBAAC7D,EAAA,EAAD,CACEP,UAAU,KACVQ,QAAQ,KACRC,MAAM,UACN4D,QAAM,EACN/D,UAAWL,EAAQ1B,OAElB6F,EAASE,eAOpB,kBAACC,EAAA,EAAD,CACE/D,QAAQ,YACRP,QAAS,CACPT,MAAOsE,YAAK7D,EAAQxB,aAAciF,GAAQzD,EAAQrB,mBAEpD8E,KAAMA,GAEN,yBAAKpD,UAAWL,EAAQhD,aACtB,kBAAC+G,EAAA,EAAD,CAAYG,QAnDI,WACxBR,GAAQ,KAmDE,kBAAC,IAAD,QAIJ,kBAACa,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACG9E,EAAO+E,KAAI,SAAAC,GACV,OACE,kBAAChE,EAAD,CACEE,GAAI8D,EAAM9E,KACVe,QAAS+D,EAAM7E,KACfC,KAAM4E,EAAM5E,KACZH,IAAK+E,EAAM/E,WAOrB,0BAAMU,UAAWL,EAAQf,SACvB,yBAAKoB,UAAWL,EAAQhB,eAExB,kBAAC2F,EAAA,EAAD,CAAWC,SAAS,KAAKvE,UAAWL,EAAQZ,WAC1C,kBAACa,EAAA,EAAD,CAAMb,WAAS,EAACP,QAAS,GACvB,kBAAC,IAAD,KAGIa,EAAO+E,KAAI,SAAAC,GACT,OACE,kBAAC,IAAD,CACE9E,KAAM8E,EAAM9E,KACZD,IAAK+E,EAAM/E,IACXI,UAAW2E,EAAM3E,eAKzB,kBAAC,IAAD,CAAU8E,KAAK,IAAIjE,GAAG,WAI1B,kBAACkE,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAChC,EAAD,W,MCxHdiC,IAASC,OACP,kBAAC,aAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,cAAc,Y","file":"static/js/main.8213ed18.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nconst DrawerWidth = 240;\n\nconst AppStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: DrawerWidth,\n    width: `calc(100% - ${DrawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: DrawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default AppStyles;\n","import React from 'react';\n\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\nimport FolderSpecialRoundedIcon from '@material-ui/icons/FolderSpecialRounded';\n\nimport HomePage from '../pages/HomePage';\nimport ArchivePage from '../pages/ArchivePage';\n\nconst Routes = [\n  {\n    key: 100,\n    path: '/home',\n    name: 'Home',\n    icon: <HomeRoundedIcon />,\n    component: HomePage,\n  },\n  {\n    key: 101,\n    path: '/archive',\n    name: 'Archive',\n    icon: <FolderSpecialRoundedIcon />,\n    component: ArchivePage,\n  },\n];\n\nexport default Routes;\n","import React from 'react';\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport AppStyles from '../constants/AppStyles';\n\nexport default function HomePage() {\n  const classes = AppStyles();\n\n  return (\n    <Grid item xs={12}>\n      <Paper className={classes.paper}>\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n          Home Page\n        </Typography>\n        <p>\n          This is a website for all README information related to T145&rsquo;s\n          Github Repositories!\n        </p>\n      </Paper>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport AppStyles from '../constants/AppStyles';\n\nexport default function HomePage() {\n  const classes = AppStyles();\n\n  return (\n    <Grid item xs={12}>\n      <Paper className={classes.paper}>\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n          Archive Page\n        </Typography>\n        <p>\n          This is a website for all README information related to T145&rsquo;s\n          Github Repositories!\n        </p>\n      </Paper>\n    </Grid>\n  );\n}\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport {\n  Link as RouterLink,\n  LinkProps as RouterLinkProps,\n} from 'react-router-dom';\n\ninterface ListItemLinkProps {\n  icon?: React.ReactNode;\n  primary: string;\n  to: string;\n}\n\nexport default function ListItemLink({ icon, primary, to }: ListItemLinkProps) {\n  const renderLink = React.useMemo(\n    () =>\n      React.forwardRef<never, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\n        <RouterLink to={to} ref={ref} {...itemProps} />\n      )),\n    [to]\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink}>\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n","import React from 'react';\n\n/**\n * Generates a random integer between min and max (inclusive)\n * @param  {number} min\n * @param  {number} max\n * @returns randomly generated integer\n */\nfunction randomInt(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport default function PokemonSprite() {\n  // const [hasError, setError] = React.useState(false);\n  const [sprite, setSprite] = React.useState('');\n  const [name, setName] = React.useState('');\n\n  async function fetchData() {\n    const pokeId = randomInt(1, 151);\n    const url = `https://pokeapi.co/api/v2/pokemon/${pokeId}`;\n    const response = await fetch(url);\n\n    response.json().then(result => {\n      setSprite(result.sprites.front_default);\n      setName(result.name);\n    });\n    // .catch(err => setError(err));\n  }\n\n  React.useEffect(() => {\n    fetchData();\n  }, []);\n\n  if (sprite) {\n    return (\n      <div>\n        <img src={sprite} alt={name} />\n      </div>\n    );\n  }\n\n  return <></>;\n}\n","import React from 'react';\nimport { Typography, Link, Grid } from '@material-ui/core';\nimport PokemonSprite from './PokemonSprite';\n\nexport default function Footer() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://github.com/T145\">\n        T145\n      </Link>{' '}\n      {new Date().getFullYear()}.\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"baseline\">\n        <PokemonSprite /> <PokemonSprite /> <PokemonSprite />\n      </Grid>\n    </Typography>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { isMobileOnly } from 'react-device-detect';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport {\n  CssBaseline,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Drawer,\n  Divider,\n  List,\n  Container,\n  Grid,\n  Box,\n} from '@material-ui/core';\n\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\nimport ChevronLeftRoundedIcon from '@material-ui/icons/ChevronLeftRounded';\n\nimport AppStyles from '../constants/AppStyles';\nimport Routes from '../utils/Routes';\nimport ListItemLink from './ListItemLink';\nimport Footer from './Footer';\n\nexport default function Navigator() {\n  const classes = AppStyles();\n  const [open, setOpen] = React.useState(!isMobileOnly);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        <CssBaseline />\n\n        <AppBar\n          position=\"absolute\"\n          className={clsx(classes.appBar, open && classes.appBarShift)}\n        >\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              className={clsx(\n                classes.menuButton,\n                open && classes.menuButtonHidden\n              )}\n            >\n              <MenuRoundedIcon />\n            </IconButton>\n\n            <Route>\n              {({ location }) => (\n                <Typography\n                  component=\"h1\"\n                  variant=\"h6\"\n                  color=\"inherit\"\n                  noWrap\n                  className={classes.title}\n                >\n                  {location.pathname}\n                </Typography>\n              )}\n            </Route>\n          </Toolbar>\n        </AppBar>\n\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n          }}\n          open={open}\n        >\n          <div className={classes.toolbarIcon}>\n            <IconButton onClick={handleDrawerClose}>\n              <ChevronLeftRoundedIcon />\n            </IconButton>\n          </div>\n\n          <Divider />\n          <List>\n            {Routes.map(route => {\n              return (\n                <ListItemLink\n                  to={route.path}\n                  primary={route.name}\n                  icon={route.icon}\n                  key={route.key}\n                />\n              );\n            })}\n          </List>\n        </Drawer>\n\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid container spacing={3}>\n              <Switch>\n                {\n                  // render page content on the corresponding route\n                  Routes.map(route => {\n                    return (\n                      <Route\n                        path={route.path}\n                        key={route.key}\n                        component={route.component}\n                      />\n                    );\n                  })\n                }\n                <Redirect from=\"/\" to=\"home\" />\n              </Switch>\n            </Grid>\n\n            <Box pt={4}>\n              <Footer />\n            </Box>\n          </Container>\n        </main>\n      </div>\n    </Router>\n  );\n}\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport Website from './components/Website';\nimport 'fontsource-roboto';\n\n/*\n * Useful documentation:\n * https://reactjs.org/docs/strict-mode.html\n * https://reactrouter.com/web/guides/quick-start\n */\n\nReactDOM.render(\n  <StrictMode>\n    <Website />\n  </StrictMode>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}